package pages

import (
	"fmt"
	"github.com/mikestefanello/pagoda/pkg/helpers"
	"github.com/mikestefanello/pagoda/templates/components"
)

templ Contact(form *helpers.ContactForm) {
	if components.Page(ctx).HTMX.Request.Target != "contact" {
		<article class="message is-link">
			<div class="message-body">
				<p>This is an example of a form with inline, server-side validation and HTMX-powered AJAX submissions without writing a single line of JavaScript.</p>
				<p>Only the form below will update async upon submission.</p>
			</div>
		</article>
	}
	@contactForm(form)
}

templ contactForm(form *helpers.ContactForm) {
	if form.IsDone() {
		<article class="message is-large is-success">
			<div class="message-header">
				<p>Thank you!</p>
			</div>
			<div class="message-body">
				No email was actually sent but this entire operation was handled server-side and degrades without JavaScript enabled.
			</div>
		</article>
	} else {
		<form id="contact" method="post" hx-post={ string(components.Funcs(ctx).URL("contact.submit")) }>
			<div class="field">
				<label for="email" class="label">Email address</label>
				<div class="control">
					<input id="email" name="email" type="email" class={ fmt.Sprintf("input %s", form.GetFieldStatusClass("Email")) } value={ form.Email }/>
				</div>
				@components.FieldErrors(form.GetFieldErrors("Email"))
			</div>
			<div class="control">
				<label class="label">Department</label>
				<label class="radio">
					<input type="radio" name="department" value="sales" checked?={ form.Department == "sales" }/>
					Sales
				</label>
				<label class="radio">
					<input type="radio" name="department" value="marketing" checked?={ form.Department == "marketing" }/>
					Marketing
				</label>
				<label class="radio">
					<input type="radio" name="department" value="hr" checked?={ form.Department == "hr" }/>
					HR
				</label>
				@components.FieldErrors(form.GetFieldErrors("Department"))
			</div>
			<div class="field">
				<label for="message" class="label">Message</label>
				<div class="control">
					<textarea id="message" name="message" class={ fmt.Sprintf("textarea %s", form.GetFieldStatusClass("Message")) }>{ form.Message }</textarea>
				</div>
				@components.FieldErrors(form.GetFieldErrors("Message"))
			</div>
			<div class="field is-grouped">
				<div class="control">
					<button class="button is-link">Submit</button>
				</div>
			</div>
			@components.CSRF()
		</form>
	}
}
