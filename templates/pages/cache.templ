package pages

import (
	"github.com/mikestefanello/pagoda/pkg/helpers"
	"github.com/mikestefanello/pagoda/templates/components"
)

templ Cache(cacheValue string, form *helpers.CacheForm) {
	<form id="task" method="post" hx-post={ string(components.Funcs(ctx).URL("cache.submit")) }>
		<article class="message">
			<div class="message-header">
				<p>Test the cache</p>
			</div>
			<div class="message-body">
				This route handler shows how the default in-memory cache works. Try updating the value using the form below and see how it persists after you reload the page.
				HTMX makes it easy to re-render the cached value after the form is submitted.
			</div>
		</article>
		<label for="value" class="label">Value in cache: </label>
		if cacheValue != "" {
			<span class="tag is-success">{ cacheValue }</span>
		} else {
			<i>(empty)</i>
		}
		<br/>
		<br/>
		<div class="field">
			<label for="value" class="label">Value</label>
			<div class="control">
				<input id="value" name="value" class="input" value={ form.Value }/>
			</div>
		</div>
		<div class="field is-grouped">
			<div class="control">
				<button class="button is-link">Update cache</button>
			</div>
		</div>
		@components.CSRF()
	</form>
}
